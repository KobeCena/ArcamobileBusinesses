/*
	ARCAServices.m
	Creates a list of the services available with the ARCA prefix.
	Generated by SudzC.com
*/
#import "ARCAServices.h"

@implementation ARCAServices

@synthesize logging, server, defaultServer;

@synthesize server_businesses;


#pragma mark Initialization

-(id)initWithServer:(NSString*)serverName{
	if(self = [self init]) {
		self.server = serverName;
	}
	return self;
}

+(ARCAServices*)service{
	return (ARCAServices*)[[[ARCAServices alloc] init] autorelease];
}

+(ARCAServices*)serviceWithServer:(NSString*)serverName{
	return (ARCAServices*)[[[ARCAServices alloc] initWithServer:serverName] autorelease];
}

#pragma mark Methods

-(void)setLogging:(BOOL)value{
	logging = value;
	[self updateServices];
}

-(void)setServer:(NSString*)value{
	[server release];
	server = [value retain];
	[self updateServices];
}

-(void)updateServices{

	[self updateService: self.server_businesses];
}

-(void)updateService:(SoapService*)service{
	service.logging = self.logging;
	if(self.server == nil || self.server.length < 1) { return; }
	service.serviceUrl = [service.serviceUrl stringByReplacingOccurrencesOfString:defaultServer withString:self.server];
}

#pragma mark Getter Overrides


-(ARCAserver_businesses*)server_businesses{
	if(server_businesses == nil) {
		server_businesses = [[ARCAserver_businesses alloc] init];
	}
	return server_businesses;
}


@end
			