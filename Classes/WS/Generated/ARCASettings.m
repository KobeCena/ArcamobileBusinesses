/*
	ARCASettings.h
	The implementation of properties and methods for the ARCASettings object.
	Generated by SudzC.com
*/
#import "ARCASettings.h"

@implementation ARCASettings
	@synthesize socialnetwork_enabled = _socialnetwork_enabled;
	@synthesize review_listing_enabled = _review_listing_enabled;
	@synthesize need_login_to_listing_review = _need_login_to_listing_review;
	@synthesize openid_enabled = _openid_enabled;
	@synthesize facebook_enabled = _facebook_enabled;
	@synthesize facebook_apikey = _facebook_apikey;
	@synthesize twitter_apikey = _twitter_apikey;
	@synthesize twitter_apisecret = _twitter_apisecret;
	@synthesize promotion_force_redeem_by_facebook = _promotion_force_redeem_by_facebook;
	@synthesize default_tagline = _default_tagline;
	@synthesize foreignaccount_facebook_apiid = _foreignaccount_facebook_apiid;
	@synthesize twilioEnabled = _twilioEnabled;
	@synthesize single_store_id = _single_store_id;

	- (id) init
	{
		if(self = [super init])
		{
			self.socialnetwork_enabled = nil;
			self.review_listing_enabled = nil;
			self.need_login_to_listing_review = nil;
			self.openid_enabled = nil;
			self.facebook_enabled = nil;
			self.facebook_apikey = nil;
			self.twitter_apikey = nil;
			self.twitter_apisecret = nil;
			self.promotion_force_redeem_by_facebook = nil;
			self.default_tagline = nil;
			self.foreignaccount_facebook_apiid = nil;
			self.twilioEnabled = nil;
			self.single_store_id = nil;

		}
		return self;
	}

	+ (ARCASettings*) newWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (ARCASettings*)[[[ARCASettings alloc] initWithNode: node] autorelease];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.socialnetwork_enabled = [Soap getNodeValue: node withName: @"socialnetwork_enabled"];
			self.review_listing_enabled = [Soap getNodeValue: node withName: @"review_listing_enabled"];
			self.need_login_to_listing_review = [Soap getNodeValue: node withName: @"need_login_to_listing_review"];
			self.openid_enabled = [Soap getNodeValue: node withName: @"openid_enabled"];
			self.facebook_enabled = [Soap getNodeValue: node withName: @"facebook_enabled"];
			self.facebook_apikey = [Soap getNodeValue: node withName: @"facebook_apikey"];
			self.twitter_apikey = [Soap getNodeValue: node withName: @"twitter_apikey"];
			self.twitter_apisecret = [Soap getNodeValue: node withName: @"twitter_apisecret"];
			self.promotion_force_redeem_by_facebook = [Soap getNodeValue: node withName: @"promotion_force_redeem_by_facebook"];
			self.default_tagline = [Soap getNodeValue: node withName: @"default_tagline"];
			self.foreignaccount_facebook_apiid = [Soap getNodeValue: node withName: @"foreignaccount_facebook_apiid"];
			self.twilioEnabled = [Soap getNodeValue: node withName: @"twilioEnabled"];
			self.single_store_id = [NSDecimalNumber decimalNumberWithString: [Soap getNodeValue: node withName: @"single_store_id"]];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"Settings"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [[NSMutableString alloc] init];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return [s autorelease];
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		if (self.socialnetwork_enabled != nil) [s appendFormat: @"<socialnetwork_enabled>%@</socialnetwork_enabled>", [[self.socialnetwork_enabled stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.review_listing_enabled != nil) [s appendFormat: @"<review_listing_enabled>%@</review_listing_enabled>", [[self.review_listing_enabled stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.need_login_to_listing_review != nil) [s appendFormat: @"<need_login_to_listing_review>%@</need_login_to_listing_review>", [[self.need_login_to_listing_review stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.openid_enabled != nil) [s appendFormat: @"<openid_enabled>%@</openid_enabled>", [[self.openid_enabled stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.facebook_enabled != nil) [s appendFormat: @"<facebook_enabled>%@</facebook_enabled>", [[self.facebook_enabled stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.facebook_apikey != nil) [s appendFormat: @"<facebook_apikey>%@</facebook_apikey>", [[self.facebook_apikey stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.twitter_apikey != nil) [s appendFormat: @"<twitter_apikey>%@</twitter_apikey>", [[self.twitter_apikey stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.twitter_apisecret != nil) [s appendFormat: @"<twitter_apisecret>%@</twitter_apisecret>", [[self.twitter_apisecret stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.promotion_force_redeem_by_facebook != nil) [s appendFormat: @"<promotion_force_redeem_by_facebook>%@</promotion_force_redeem_by_facebook>", [[self.promotion_force_redeem_by_facebook stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.default_tagline != nil) [s appendFormat: @"<default_tagline>%@</default_tagline>", [[self.default_tagline stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.foreignaccount_facebook_apiid != nil) [s appendFormat: @"<foreignaccount_facebook_apiid>%@</foreignaccount_facebook_apiid>", [[self.foreignaccount_facebook_apiid stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.twilioEnabled != nil) [s appendFormat: @"<twilioEnabled>%@</twilioEnabled>", [[self.twilioEnabled stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.single_store_id != nil) [s appendFormat: @"<single_store_id>%@</single_store_id>", [NSString stringWithFormat: @"%@", self.single_store_id]];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[ARCASettings class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}
	
	- (void) dealloc
	{
		if(self.socialnetwork_enabled != nil) { [self.socialnetwork_enabled release]; }
		if(self.review_listing_enabled != nil) { [self.review_listing_enabled release]; }
		if(self.need_login_to_listing_review != nil) { [self.need_login_to_listing_review release]; }
		if(self.openid_enabled != nil) { [self.openid_enabled release]; }
		if(self.facebook_enabled != nil) { [self.facebook_enabled release]; }
		if(self.facebook_apikey != nil) { [self.facebook_apikey release]; }
		if(self.twitter_apikey != nil) { [self.twitter_apikey release]; }
		if(self.twitter_apisecret != nil) { [self.twitter_apisecret release]; }
		if(self.promotion_force_redeem_by_facebook != nil) { [self.promotion_force_redeem_by_facebook release]; }
		if(self.default_tagline != nil) { [self.default_tagline release]; }
		if(self.foreignaccount_facebook_apiid != nil) { [self.foreignaccount_facebook_apiid release]; }
		if(self.twilioEnabled != nil) { [self.twilioEnabled release]; }
		if(self.single_store_id != nil) { [self.single_store_id release]; }
		[super dealloc];
	}

@end
