/*
	ARCACountry.h
	The implementation of properties and methods for the ARCACountry object.
	Generated by SudzC.com
*/
#import "ARCACountry.h"

@implementation ARCACountry
	@synthesize _id = __id;
	@synthesize name = _name;
	@synthesize abbreviation = _abbreviation;
	@synthesize friendly_url = _friendly_url;
	@synthesize seo_description = _seo_description;
	@synthesize seo_keywords = _seo_keywords;

	- (id) init
	{
		if(self = [super init])
		{
			self._id = nil;
			self.name = nil;
			self.abbreviation = nil;
			self.friendly_url = nil;
			self.seo_description = nil;
			self.seo_keywords = nil;

		}
		return self;
	}

	+ (ARCACountry*) newWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (ARCACountry*)[[[ARCACountry alloc] initWithNode: node] autorelease];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self._id = [NSDecimalNumber decimalNumberWithString: [Soap getNodeValue: node withName: @"id"]];
			self.name = [Soap getNodeValue: node withName: @"name"];
			self.abbreviation = [Soap getNodeValue: node withName: @"abbreviation"];
			self.friendly_url = [Soap getNodeValue: node withName: @"friendly_url"];
			self.seo_description = [Soap getNodeValue: node withName: @"seo_description"];
			self.seo_keywords = [Soap getNodeValue: node withName: @"seo_keywords"];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"Country"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [[NSMutableString alloc] init];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return [s autorelease];
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		if (self._id != nil) [s appendFormat: @"<id>%@</id>", [NSString stringWithFormat: @"%@", self._id]];
		if (self.name != nil) [s appendFormat: @"<name>%@</name>", [[self.name stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.abbreviation != nil) [s appendFormat: @"<abbreviation>%@</abbreviation>", [[self.abbreviation stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.friendly_url != nil) [s appendFormat: @"<friendly_url>%@</friendly_url>", [[self.friendly_url stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.seo_description != nil) [s appendFormat: @"<seo_description>%@</seo_description>", [[self.seo_description stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.seo_keywords != nil) [s appendFormat: @"<seo_keywords>%@</seo_keywords>", [[self.seo_keywords stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[ARCACountry class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}
	
	- (void) dealloc
	{
		if(self._id != nil) { [self._id release]; }
		if(self.name != nil) { [self.name release]; }
		if(self.abbreviation != nil) { [self.abbreviation release]; }
		if(self.friendly_url != nil) { [self.friendly_url release]; }
		if(self.seo_description != nil) { [self.seo_description release]; }
		if(self.seo_keywords != nil) { [self.seo_keywords release]; }
		[super dealloc];
	}

@end
